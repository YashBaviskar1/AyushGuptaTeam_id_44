import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from sklearn.metrics import mean_squared_error

# Load the merged data from the Excel sheet
df = pd.read_excel('merged_file_avu.xlsx')

# Extract features (inputs) and target variable (output)
X = df[['Air temperature', 'Pressure', 'Wind speed']]
y = df['Power generated by system']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Build the neural network model
model = Sequential([
    Dense(64, activation='relu', input_shape=(X_train_scaled.shape[1],)),
    Dense(32, activation='relu'),
    Dense(1)  # Output layer
])

# Compile the model
model.compile(optimizer='adam', loss='mean_squared_error')

# Train the model
model.fit(X_train_scaled, y_train, epochs=100, batch_size=32, verbose=0)

# Predict on the test set and calculate Mean Squared Error (MSE)
y_pred = model.predict(X_test_scaled).flatten()
mse = mean_squared_error(y_test, y_pred)
print('Mean Squared Error (Neural Network):', mse)

# Save predictions to a new CSV file
df_test_with_predictions = X_test.copy()
df_test_with_predictions['Actual Power'] = y_test
df_test_with_predictions['Predicted Power'] = y_pred
df_test_with_predictions.to_csv('test_data_with_predictions_neural_network.csv', index=False)
